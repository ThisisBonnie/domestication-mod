############################
#
# Domestication Leader Events
#
# Written by Colleen Arkadija
#
############################

namespace = domestication_leader

# gatekeeper event for level-up florets
country_event = {
	id = domestication_leader.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_domesticator_or_protectorate = yes
		# Do not add floret if leader already has 2
		from = {
			OR = {
				NOT = { is_variable_set = floret_count }
				check_variable = {
					which = floret_count
					value < 2
				}
			}
		}
	}

	immediate = {
		#random_owned_leader = {
		#	limit = {
		#		leader_class = governor
		#	}
		#	save_event_target_as = guvna
		#}
		#event_target:guvna = {
		reroll_random = yes
		from = {
			if = {
				limit = {
					leader_class = scientist
					NOT = {	has_leader_flag = has_gained_level_floret	}
				}
				random_list = {
					90 = { }
					10 = {
						modifier = {
							factor = 1.5
							has_level = 3
						}
						modifier = {
							factor = 2.5
							has_level = 4
						}
						modifier = {
							factor = 5
							has_level > 4
						}
						add_random_leader_floret_trait = yes
						set_leader_flag = has_gained_level_floret
					}
				}
			}
			if = {
				limit = {
					leader_class = admiral
					NOT = { has_leader_flag = has_gained_level_floret }
				}
				random_list = {
					90 = { }
					10 = {
						modifier = {
							factor = 1.5
							has_level = 3
						}
						modifier = {
							factor = 2.5
							has_level = 4
						}
						modifier = {
							factor = 5
							has_level > 4
						}
						add_random_leader_floret_trait = yes
						set_leader_flag = has_gained_level_floret
					}
				}
			}
			if = {
				limit = {
					leader_class = governor
					NOT = { has_leader_flag = has_gained_level_floret }
					#exists = planet
				}
				random_list = {
					80 = { }
					20 = {
						modifier = {
							factor = 1.5
							has_level = 3
						}
						modifier = {
							factor = 2.5
							has_level = 4
						}
						modifier = {
							factor = 5
							has_level > 4
						}
						add_random_leader_floret_trait = yes
						set_leader_flag = has_gained_level_floret
					}
				}
			}
			if = {
				limit = {
					leader_class = general
					NOT = { has_leader_flag = has_gained_level_floret }
				}
				random_list = {
					80 = { }
					20 = {
						modifier = {
							factor = 1.5
							has_level = 3
						}
						modifier = {
							factor = 2.5
							has_level = 4
						}
						modifier = {
							factor = 5
							has_level > 4
						}
						add_random_leader_floret_trait = yes
						set_leader_flag = has_gained_level_floret
					}
				}
			}
			if = {
				limit = {
					leader_class = ruler
					NOT = { has_leader_flag = has_gained_level_floret }
				}
				random_list = {
					80 = { }
					20 = {
						modifier = {
							factor = 1.5
							has_level = 3
						}
						modifier = {
							factor = 2.5
							has_level = 4
						}
						modifier = {
							factor = 5
							has_level > 4
						}
						#add_random_leader_floret_trait = yes
						#set_leader_flag = has_gained_level_floret
					}
				}
			}
		}
	}
}

## Create floret rescued in space battle
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = domestication_leader.2
	title = domestication_leader.2.name

	desc = domestication_leader.2.desc

	picture = GFX_evt_emergency_workers

	hide_window = no
	is_triggered_only = yes

	trigger = {
		this = { is_domesticator_or_protectorate = yes }
		# defeated country is default country type
		from = {
			is_country_type = default
		}
		# admiral has < 2 florets
		fromfrom = {
			exists = leader
			leader = {
				NOT = { has_trait = leader_trait_warp_eng_adm }
				OR = {
					NOT = { is_variable_set = floret_count }
					check_variable = {
						which = floret_count
						value < 2
					}
				}
			}
		}
	}

	immediate = {
		#fromfrom = {
		#	solar_system = { save_event_target_as = system }
		#	leader = { save_event_target_as = new_owner	}
		#}
		#from = {
		#	save_event_target_as = defeated_country
		#}

		event_target:new_owner = {
			## Up to 2 florets - for the moment

			if = {
				limit = {
					NOT = { is_variable_set = floret_count }
				}
				set_variable = {
					which = floret_count
					value = 0
				}
			}
			if = {
				limit = {
					check_variable = {
						which = floret_count
						value = 0
					}
				}
				set_variable = {
					which = affini_id_1
					value = event_target:floret_country.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}
			else = {
				set_variable = {
					which = affini_id_2
					value = event_target:floret_country.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}

			add_trait = leader_trait_warp_eng_adm
			add_ruler_trait = leader_trait_warp_eng_rul

			## generate new leader of species matching primary species of defeated fleet
			owner = {
				event_target:floret_country = {
					create_leader = {
						name = random
						species = event_target:defeated_country.owner_species
						class = admiral
						leader_age_min = 20
						leader_age_max = 40
						skill = 1
					}
					last_created_leader = {
						save_event_target_as = new_floret
						add_trait = leader_trait_warp_eng_adm
						add_trait = leader_trait_floret_immortal
					}
				}
				if = {
					limit = {
						event_target:new_owner = {
							check_variable = {
								which = floret_count
								value = 1
							}
						}
					}
					event_target:new_floret = {
						set_name = "[this.GetName], 1st Floret"
						set_variable = {
							which = floret_id
							value = event_target:floret_country.floret_index
						}
						set_variable = {
							which = floret_number
							value = 1
						}
					}
				}
				else = {
					event_target:new_floret = {
						set_name = "[this.GetName], 2nd Floret"
						set_variable = {
							which = floret_id
							value = event_target:floret_country.floret_index
						}
						set_variable = {
							which = floret_number
							value = 2
						}
					}
				}
				event_target:floret_country = {
					change_variable = {
						which = floret_index
						value = 1
					}
				}
			}
		}
	}

	option = {
		name = domestication_leader.2.a
		trigger = {
			always = yes
		}
	}
}

# Create random floret from level-up
country_event = {
	id = domestication_leader.3
	title = domestication_leader.3.name
	desc = {
		trigger = {
			hidden:event_target:new_owner = {
				switch = {
					trigger = has_leader_flag
					gained_leader_trait_cutie_sci = { text = domestication_leader.new_cutie_sci }
					gained_leader_trait_cutie_adm = { text = domestication_leader.new_cutie_adm }
					gained_leader_trait_cutie_gov = { text = domestication_leader.new_cutie_gov }
					gained_leader_trait_beeple_gov = { text = domestication_leader.new_beeple_gov }
					gained_leader_trait_cutie_gen = { text = domestication_leader.new_cutie_gen }
					default = { text = "domestication_leader.3.fallback" }
				}
			}
		}
	}

	location = event_target:current_location
	picture = GFX_evt_acquire_asset
	is_triggered_only = yes

	immediate = {
		event_target:new_owner = {
			## Up to 2 florets - for the moment

			if = {
				limit = {
					NOT = { is_variable_set = floret_count }
				}
				set_variable = {
					which = floret_count
					value = 0
				}
			}
			if = {
				limit = {
					check_variable = {
						which = floret_count
						value = 0
					}
				}
				set_variable = {
					which = affini_id_1
					value = event_target:floret_country.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}
			else = {
				set_variable = {
					which = affini_id_2
					value = event_target:floret_country.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}


			## generate new leader of species matching biological pop in empire
			owner = {
				random_owned_pop = {
					limit = {
						has_job = floret
					}
					save_event_target_as = floret_species
				}
				event_target:floret_country = {
					create_leader = {
						name = random
						species = event_target:floret_species
						class = governor
						leader_age_min = 20
						leader_age_max = 40
						skill = 1
						immortal = yes
					}
					last_created_leader = {
						save_event_target_as = new_floret
						event_target:new_owner = {
							if = {
								limit = { has_leader_flag = gained_leader_trait_cutie_sci }
								event_target:new_floret = { add_trait = leader_trait_cutie_sci }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_cutie_adm }
								event_target:new_floret = { add_trait = leader_trait_cutie_adm }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_cutie_gov }
								event_target:new_floret = { add_trait = leader_trait_cutie_gov }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_beeple_gov }
								event_target:new_floret = { add_trait = leader_trait_beeple_gov }
							}
							if = {
								limit = { has_leader_flag = gained_leader_trait_cutie_gen }
								event_target:new_floret = { add_trait = leader_trait_cutie_gen }
							}
						}
						add_trait = leader_trait_floret_immortal
					}
				}
				if = {
					limit = {
						event_target:new_owner = {
							check_variable = {
								which = floret_count
								value = 1
							}
						}
					}
					event_target:new_floret = {
						set_name = "[this.GetName], 1st Floret"
						set_variable = {
							which = floret_id
							value = event_target:floret_country.floret_index
						}
						set_variable = {
							which = floret_number
							value = 1
						}
					}
				}
				else = {
					event_target:new_floret = {
						set_name = "[this.GetName], 2nd Floret"
						set_variable = {
							which = floret_id
							value = event_target:floret_country.floret_index
						}
						set_variable = {
							which = floret_number
							value = 2
						}
					}
				}
				change_variable = {
					which = floret_index
					value = 1
				}
			}
		}
	}

	option = {
		name = domestication_leader.3.a
		trigger = {
			always = yes
		}
	}
}

## Create pirate floret rescued in space battle
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = domestication_leader.4
	title = domestication_leader.4.name

	desc = domestication_leader.4.desc

	picture = GFX_evt_exploding_ship

	hide_window = no
	is_triggered_only = yes

	trigger = {
		is_domesticator_or_protectorate = yes
		# defeated fleet has an admiral
		#fromfromfrom = {
		#	exists = leader
		#}
		# defeated country is pirate country type
		from = {
			is_country_type = pirate
		}
		# admiral has < 2 florets
		fromfrom = {
			exists = leader
			leader = {
				NOT = { has_trait = leader_trait_pirate_adm }
				OR = {
					NOT = { is_variable_set = floret_count }
					check_variable = {
						which = floret_count
						value < 2
					}
				}
			}
		}
		#always = yes
	}

	immediate = {
		#fromfrom = {
		#	solar_system = { save_event_target_as = system }
		#	leader = { save_event_target_as = new_owner	}
		#}
		#from = {
		#	save_event_target_as = defeated_country
		#}
		#fromfromfrom = {
		#	leader = { save_event_target_as = new_floret }
		#}

		event_target:new_owner = {
			## Up to 2 florets - for the moment
			event_target:floret_country = {
				create_leader = {
					name = random
					species = event_target:defeated_country.owner_species
					class = governor
					leader_age_min = 20
					leader_age_max = 40
					skill = 1
				}
				last_created_leader = {
					save_event_target_as = new_floret
					add_trait = leader_trait_pirate_adm
					add_trait = leader_trait_floret_immortal
				}
			}
			if = {
				limit = {
					NOT = { is_variable_set = floret_count }
				}
				set_variable = {
					which = floret_count
					value = 0
				}
			}
			if = {
				limit = {
					check_variable = {
						which = floret_count
						value = 0
					}
				}
				set_variable = {
					which = affini_id_1
					value = event_target:floret_country.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}
			else = {
				set_variable = {
					which = affini_id_2
					value = event_target:floret_country.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}

			add_trait = leader_trait_pirate_adm
			add_ruler_trait = leader_trait_pirate_rul

			#event_target:new_floret = {
			#	set_owner = event_target:floret_country
			#}

			## generate new leader of species matching primary species of defeated fleet
			owner = {
				if = {
					limit = {
						event_target:new_owner = {
							check_variable = {
								which = floret_count
								value = 1
							}
						}
					}
					event_target:new_floret = {
						set_name = "[this.GetName], 1st Floret"
						set_variable = {
							which = floret_id
							value = event_target:floret_country.floret_index
						}
						set_variable = {
							which = floret_number
							value = 1
						}
					}
				}
				else = {
					event_target:new_floret = {
						set_name = "[this.GetName], 2nd Floret"
						set_variable = {
							which = floret_id
							value = event_target:floret_country.floret_index
						}
						set_variable = {
							which = floret_number
							value = 2
						}
					}
				}
				event_target:floret_country = {
					change_variable = {
						which = floret_index
						value = 1
					}
				}
			}
		}
	}

	option = {
		name = domestication_leader.4.a
		trigger = {
			always = yes
		}
	}
}

## Create admiral floret rescued in space battle
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = domestication_leader.5
	title = domestication_leader.5.name

	desc = domestication_leader.5.desc

	picture = GFX_evt_exploding_ship

	hide_window = no
	is_triggered_only = yes

	trigger = {
		is_domesticator_or_protectorate = yes
		# defeated fleet has an admiral
		fromfromfrom = {
			exists = leader
		}
		# defeated country is default country type
		from = {
			is_country_type = default
		}
		# admiral has < 2 florets
		fromfrom = {
			exists = leader
			leader = {
				NOT = { has_trait = leader_trait_admiral_adm }
				OR = {
					NOT = { is_variable_set = floret_count }
					check_variable = {
						which = floret_count
						value < 2
					}
				}
			}
		}
		#always = yes
	}

	immediate = {
		fromfrom = {
			solar_system = { save_event_target_as = system }
			leader = { save_event_target_as = new_owner	}
		}
		from = {
			save_event_target_as = defeated_country
		}
		fromfromfrom = {
			leader = { save_event_target_as = new_floret }
		}

		event_target:new_owner = {
			## Up to 2 florets - for the moment
			#event_target:floret_country = {
			#	create_leader = {
			#		name = random
			#		species = event_target:defeated_country.owner_species
			#		class = governor
			#		leader_age_min = 20
			#		leader_age_max = 40
			#		skill = 1
			#	}
			#	last_created_leader = {
			#		save_event_target_as = new_floret
			#	}
			#}
			if = {
				limit = {
					NOT = { is_variable_set = floret_count }
				}
				set_variable = {
					which = floret_count
					value = 0
				}
			}
			if = {
				limit = {
					check_variable = {
						which = floret_count
						value = 0
					}
				}
				set_variable = {
					which = affini_id_1
					value = event_target:floret_country.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}
			else = {
				set_variable = {
					which = affini_id_2
					value = event_target:floret_country.floret_index
				}
				change_variable = {
					which = floret_count
					value = 1
				}
			}

			add_trait = leader_trait_admiral_adm
			add_ruler_trait = leader_trait_admiral_rul

			event_target:new_floret = {
				set_owner = event_target:floret_country
				add_trait = leader_trait_admiral_adm
				add_trait = leader_trait_floret_immortal
			}

			owner = {
				if = {
					limit = {
						event_target:new_owner = {
							check_variable = {
								which = floret_count
								value = 1
							}
						}
					}
					event_target:new_floret = {
						set_name = "[this.GetName], 1st Floret"
						set_variable = {
							which = floret_id
							value = event_target:floret_country.floret_index
						}
						set_variable = {
							which = floret_number
							value = 1
						}
					}
				}
				else = {
					event_target:new_floret = {
						set_name = "[this.GetName], 2nd Floret"
						set_variable = {
							which = floret_id
							value = event_target:floret_country.floret_index
						}
						set_variable = {
							which = floret_number
							value = 2
						}
					}
				}
				event_target:floret_country = {
					change_variable = {
						which = floret_index
						value = 1
					}
				}
			}
		}
	}

	option = {
		name = domestication_leader.5.a
		trigger = {
			always = yes
		}
	}
}

# gatekeeper event for florets from combat
# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (defeated)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = domestication_leader.6
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_domesticator_or_protectorate = yes
		# Do not add floret if leader already has 2
		fromfrom = {
			exists = leader
			leader = {
				NOT = { has_trait = leader_trait_admiral_adm }
				OR = {
					NOT = { is_variable_set = floret_count }
					check_variable = {
						which = floret_count
						value < 2
					}
				}
			}
		}
	}

	immediate = {
		fromfrom = {
			solar_system = { save_event_target_as = system }
			leader = { save_event_target_as = new_owner }
		}
		from = {
			save_event_target_as = defeated_country
		}
		event_target:new_owner = {
			random_list = {
				150 = {
					modifier = {
						factor = 0.67
						has_level = 3
					}
					modifier = {
						factor = 0.2
						has_level = 4
					}
					modifier = {
						factor = 0.1
						has_level > 4
					}
				}
				3 = {
					modifier = {
						factor = 0
						has_trait = leader_trait_warp_eng_adm
					}
					owner = { country_event = { id = domestication_leader.2 } }
				}
				3 = {
					modifier = {
						factor = 0
						OR = {
							has_trait = leader_trait_pirate_adm
							NOT = {
								event_target:defeated_country = {
									is_country_type = pirate
								}
							}
						}
					}
					owner = { country_event = { id = domestication_leader.4 } }
				}
			}
		}
	}
}

# when new Affini leader spawns, give them random bloom num and append to name
# scope: country, from: leader
country_event = {
	id = domestication_leader.7
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_domesticator_or_protectorate = yes
		from = {
			NOT = { has_leader_flag = bloom_initialized }
			is_same_species = root
			NOT = { is_same_value = root.ruler }
		}
	}

	immediate = {
		from = { leader_event = { id = domestication_leader.13 } }
	}
}

# set leader bloom for all leaders
country_event = {
	id = domestication_leader.8
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		root = {
			AND = {
				is_domesticator_or_protectorate = yes
				any_owned_leader = {
					OR = {
						is_same_value = root.ruler
						exists = fleet
					}
				}
			}
		}
	}

	immediate = {
		every_owned_leader = {
			limit = {
				OR = {
					is_same_value = root.ruler
					exists = fleet
				}
			}
			leader_event = { id = domestication_leader.13 }
		}
	}
}

leader_event = {
	id = domestication_leader.9
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		always = yes
	}

	immediate = {
		random_list = {
			5 = {
				set_variable = {
					which = bloom_number
					value = 1
				}
			}
			10 = {
				set_variable = {
					which = bloom_number
					value = 2
				}
			}
			15 = {
				set_variable = {
					which = bloom_number
					value = 3
				}
			}
			10 = {
				set_variable = {
					which = bloom_number
					value = 4
				}
			}
			5 = {
				set_variable = {
					which = bloom_number
					value = 5
				}
			}
			3 = {
				set_variable = {
					which = bloom_number
					value = 6
				}
			}
			2 = {
				set_variable = {
					which = bloom_number
					value = 7
				}
			}
			2 = {
				set_variable = {
					which = bloom_number
					value = 8
				}
			}
			1 = {
				set_variable = {
					which = bloom_number
					value = 9
				}
			}
			1 = {
				set_variable = {
					which = bloom_number
					value = 10
				}
			}
		}
		reroll_random = yes
		random_list = {
			10 = {}
			1 = {
				change_variable = {
					which = bloom_number
					value = 10
				}
			}
			1 = {
				change_variable = {
					which = bloom_number
					value = 20
				}
			}
		}

		set_variable = {
			which = bloom_last_digit
			value = this.bloom_number
		}
		while = {
			limit = {
				check_variable = {
					which = bloom_last_digit
					value > 10
				}
			}
			subtract_variable = {
				which = bloom_last_digit
				value = 10
			}
		}
		round_variable = bloom_number
		round_variable = bloom_last_digit

		leader_event = { id = domestication_leader.11 }
	}
}

leader_event = {
	id = domestication_leader.10
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		always = yes
	}

	immediate = {
		#log_error = "[root.GetName] - [root.bloom_number]"
		if = {
			limit = {
				AND = {
					check_variable = {
						which = bloom_number
						value > 10
					}
					check_variable = {
						which = bloom_number
						value < 20
					}
				}
			}
			set_name = "[root.GetName], [root.bloom_number]th Bloom"
		}
		else_if = {
			limit = {
				check_variable_arithmetic = {
					which = bloom_number
					modulo = 10
					value = 1
				}
				#AND = {
				#	check_variable_arithmetic = {
				#		which = bloom_last_digit
				#		value > 0.6
				#	}
				#	check_variable = {
				#		which = bloom_last_digit
				#		value < 1.4
				#	}
				#}
			}
			set_name = "[root.GetName], [root.bloom_number]st Bloom"
		}
		else_if = {
			limit = {
				check_variable_arithmetic = {
					which = bloom_number
					modulo = 10
					value = 2
				}
				#AND = {
				#	check_variable = {
				#		which = bloom_last_digit
				#		value > 1.6
				#	}
				#	check_variable = {
				#		which = bloom_last_digit
				#		value < 2.4
				#	}
				#}
			}
			set_name = "[root.GetName], [root.bloom_number]nd Bloom"
		}
		else_if = {
			limit = {
				check_variable_arithmetic = {
					which = bloom_number
					modulo = 10
					value = 3
				}
				#AND = {
				#	check_variable = {
				#		which = bloom_last_digit
				#		value > 2.6
				#	}
				#	check_variable = {
				#		which = bloom_last_digit
				#		value < 3.4
				#	}
				#}
			}
			set_name = "[root.GetName], [root.bloom_number]rd Bloom"
		}
		else = {
			set_name = "[root.GetName], [root.bloom_number]th Bloom"
		}

		#log_error = "[root.GetName]"
		#set_name = "[root.GetName], [root.bloom_number][root.GetBloomOrdinal] Bloom"
		set_leader_flag = bloom_initialized

		## rebloom

	}
}

# Create copy of bloom leader in bloom country
leader_event = {
	id = domestication_leader.11
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		always = yes
	}

	immediate = {
		if = {
			limit = {
				NOT = {
					has_global_flag = bloom_country_created
				}
			}
			owner = {
				country_event = { id = domestication_start_of_game.3 }
			}
		}

		set_variable = {
	    which = bloom_id
	    value = event_target:bloom_country.bloom_index
	  }

		if = {
			limit = {
				leader_class = scientist
			}
			event_target:bloom_country = {
				create_leader = {
					name = random
					species = root
					class = scientist
					set_age = 0
					skill = 1
					effect = {
						save_event_target_as = clone_bloom
					}
				}
			}
		}
		else_if = {
	    limit = {
	      leader_class = governor
	    }
	    event_target:bloom_country = {
	      create_leader = {
	        name = random
	        species = root
	        class = governor
	        set_age = 0
	        skill = 1
					effect = {
						save_event_target_as = clone_bloom
					}
	      }
	    }
	  }
	  else_if = {
	    limit = {
	      leader_class = admiral
	    }
	    event_target:bloom_country = {
	      create_leader = {
	        name = random
	        species = root
	        class = admiral
	        set_age = 0
	        skill = 1
					effect = {
						save_event_target_as = clone_bloom
					}
	      }
	    }
	  }
	  else_if = {
	    limit = {
	      leader_class = general
	    }
	    event_target:bloom_country = {
	      create_leader = {
	        name = random
	        species = root
	        class = general
	        set_age = 0
	        skill = 1
					effect = {
						save_event_target_as = clone_bloom
					}
	      }
	    }
	  }
		else_if = {
	    limit = {
	      leader_class = envoy
	    }
	    event_target:bloom_country = {
	      create_leader = {
	        name = random
	        species = root
	        class = envoy
	        set_age = 0
	        skill = 1
					effect = {
						save_event_target_as = clone_bloom
					}
	      }
	    }
	  }
		else_if = {
	    limit = {
	      leader_class = ruler
	    }
	    event_target:bloom_country = {
	      create_leader = {
	        name = random
	        species = root
	        class = governor
	        set_age = 0
	        skill = 1
					effect = {
						save_event_target_as = clone_bloom
					}
	      }
	    }
	  }

		event_target:clone_bloom = {
			set_name = "[root.GetName]"
			add_trait = leader_trait_floret_immortal
			set_variable = {
				which = bloom_id
				value = event_target:bloom_country.bloom_index
			}
		}

	  event_target:bloom_country = {
	    change_variable = {
	      which = bloom_index
	      value = 1
	    }
	  }

	  leader_event = { id = domestication_leader.10 }

	}
}

# Executed as a leader has died
# This = Country
# From = Leader
country_event = {
	id = domestication_leader.12
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		from = {
			has_leader_flag = bloom_initialized
			is_variable_set = bloom_id
		}
	}

	immediate = {
		from = { save_event_target_as = old_bloom }

		event_target:bloom_country = {
	    every_owned_leader = {
	      limit = {
	        is_variable_set = bloom_id
	        check_variable = {
	          which = bloom_id
	          value = event_target:old_bloom.bloom_id
	        }
	      }
	      save_event_target_as = clone_bloom
	    }

	    if = {
	      limit = {
	        event_target:old_bloom = {
	          gender = male
	          leader_class = scientist
	        }
	      }
				root = {
					create_leader = {
						name = random
						species = event_target:clone_bloom
						gender = male
						class = scientist
						skill = 1
						set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
					}
				}
	    }
	    else_if = {
	      limit = {
	        event_target:old_bloom = {
	          gender = male
	          leader_class = governor
	        }
	      }
				root = {
		      create_leader = {
		        name = random
		        species = event_target:clone_bloom
		        gender = male
		        class = governor
		        skill = 1
		        set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
		      }
				}
	    }
	    else_if = {
	      limit = {
	        event_target:old_bloom = {
	          gender = male
	          leader_class = admiral
	        }
	      }
				root = {
		      create_leader = {
		        name = random
		        species = event_target:clone_bloom
		        gender = male
		        class = admiral
		        skill = 1
		        set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
		      }
				}
	    }
	    else_if = {
	      limit = {
	        event_target:old_bloom = {
	          gender = male
	          leader_class = general
	        }
	      }
				root = {
		      create_leader = {
		        name = random
		        species = event_target:clone_bloom
		        gender = male
		        class = general
		        skill = 1
		        set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
		      }
				}
	    }
	    else_if = {
	      limit = {
	        event_target:old_bloom = {
	          gender = female
	          leader_class = scientist
	        }
	      }
				root = {
		      create_leader = {
		        name = random
		        species = event_target:clone_bloom
		        gender = female
		        class = scientist
		        skill = 1
		        set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
		      }
				}
	    }
	    else_if = {
	      limit = {
	        event_target:old_bloom = {
	          gender = female
	          leader_class = governor
	        }
	      }
				root = {
		      create_leader = {
		        name = random
		        species = event_target:clone_bloom
		        gender = female
		        class = governor
		        skill = 1
		        set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
		      }
				}
	    }
	    else_if = {
	      limit = {
	        event_target:old_bloom = {
	          gender = female
	          leader_class = admiral
	        }
	      }
				root = {
		      create_leader = {
		        name = random
		        species = event_target:clone_bloom
		        gender = female
		        class = admiral
		        skill = 1
		        set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
		      }
				}
	    }
	    else_if = {
	      limit = {
	        event_target:old_bloom = {
	          gender = female
	          leader_class = general
	        }
	      }
				root = {
		      create_leader = {
		        name = random
		        species = event_target:clone_bloom
		        gender = female
		        class = general
		        skill = 1
		        set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
		      }
				}
	    }
	    else_if = {
	      limit = {
	        event_target:old_bloom = {
	          gender = indeterminable
	          leader_class = scientist
	        }
	      }
				root = {
		      create_leader = {
		        name = random
		        species = event_target:clone_bloom
		        gender = indeterminable
		        class = scientist
		        skill = 1
		        set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
		      }
				}
	    }
	    else_if = {
	      limit = {
	        event_target:old_bloom = {
	          gender = indeterminable
	          leader_class = governor
	        }
	      }
				root = {
		      create_leader = {
		        name = random
		        species = event_target:clone_bloom
		        gender = indeterminable
		        class = governor
		        skill = 1
		        set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
		      }
				}
	    }
	    else_if = {
	      limit = {
	        event_target:old_bloom = {
	          gender = indeterminable
	          leader_class = admiral
	        }
	      }
				root = {
		      create_leader = {
		        name = random
		        species = event_target:clone_bloom
		        gender = indeterminable
		        class = admiral
		        skill = 1
		        set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
		      }
				}
	    }
	    else_if = {
	      limit = {
	        event_target:old_bloom = {
	          gender = indeterminable
	          leader_class = general
	        }
	      }
				root = {
		      create_leader = {
		        name = random
		        species = event_target:clone_bloom
		        gender = indeterminable
		        class = general
		        skill = 1
		        set_age = 0
						effect = {
							save_event_target_as = new_bloom
						}
		      }
				}
	    }

	    event_target:new_bloom = {
				set_name = "[clone_bloom.GetName]"
	      set_variable = {
	        which = bloom_id
	        value = event_target:old_bloom.bloom_id
	      }
	      set_variable = {
	        which = bloom_number
	        value = event_target:old_bloom.bloom_number
	      }
	      change_variable = {
	        which = bloom_number
	        value = 1
	      }

				set_variable = {
					which = bloom_last_digit
					value = bloom_number
				}
				while = {
					limit = {
						check_variable = {
							which = bloom_last_digit
							value > 10
						}
					}
					subtract_variable = {
						which = bloom_last_digit
						value = 10
					}
				}
				round_variable = bloom_number
				round_variable = bloom_last_digit

				event_target:old_bloom = {
					switch = {
						trigger = has_skill
						10 > { event_target:new_bloom = { set_skill = 9 } }
						9 > { event_target:new_bloom = { set_skill = 8 } }
						8 > { event_target:new_bloom = { set_skill = 7 } }
						7 > { event_target:new_bloom = { set_skill = 6 } }
						6 > { event_target:new_bloom = { set_skill = 5 } }
						5 > { event_target:new_bloom = { set_skill = 4 } }
						4 > { event_target:new_bloom = { set_skill = 3 } }
						3 > { event_target:new_bloom = { set_skill = 2 } }
						default = { event_target:new_bloom = { set_skill = 1 } }
					}
				}

				copy_leader_traits = yes


	      leader_event = { id = domestication_leader.10 }
	    }

	  }
	}
}

leader_event = {
	id = domestication_leader.13
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		always = yes
	}

	immediate = {
		if = {
			limit = {
				NOT = {
					has_global_flag = bloom_country_created
				}
			}

			create_country = {
				name = "Bloom Country"
				type = floret_repo
				auto_delete = no
				flag = random
			}
			last_created_country = {
				save_global_event_target_as = bloom_country
				set_variable = {
					which = bloom_index
					value = 0
				}
			}
			set_global_flag = bloom_country_created
		}

		leader_event = { id = domestication_leader.9 }
	}
}
